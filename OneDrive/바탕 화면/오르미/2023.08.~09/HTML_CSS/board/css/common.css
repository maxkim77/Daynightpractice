@font-face{
    font-family: 'pretendard-Regular';
    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');
    font-weight:400;
    font-style: normal;
}
@font-face{
    font-family: 'pretendard-Regular';
    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');
    font-weight: 700;
    font-style: bold;
}
/* 기본마진 패딩제거 
 여러 HTML 요소의 기본 마진(margin)과 패딩(padding)을 0으로 설정합니다. 이는 페이지를 스타일링 할 때 일관된 간격을 가지기 위해 사용됩니다. 일반적으로 브라우저는 HTML 요소에 기본 스타일을 제공하는데, 이 코드를 사용하면 그 기본 스타일을 초기화하게 됩니다.
*/
body,h1,h2,h3,h4,p,button,fieldset,legend,ul,ol,li{
    margin:0;
    padding:0;
}
/* 커서 스타일 설정
이 코드는 활성화된(클릭 가능한) 버튼 위에 마우스를 올렸을 때, 커서를 "포인터" 스타일로 표시하도록 설정합니다. 이것은 사용자에게 버튼이 클릭 가능하다는 것을 알려주는 시각적인 표시입니다. */
button:enabled{
    cursor:pointer;
}
/* 앵커 태그의 스타일 설정
이 코드는 모든 <a> 태그 (주로 링크를 나타내는 태그)에 대해 밑줄 (text-decoration)을 없애고, 폰트 색상을 상속하도록 설정합니다. 이렇게 하면 웹페이지에서 링크가 다른 요소와 일관된 스타일을 가지게 됩니다. */
a{text-decoration:none;
  color:inherit;
}
/* 본문의 기본 폰트설정
이 코드는 웹페이지의 기본 폰트를 'Pretendard-Regular'로 설정합니다. 'sans-serif'는 이 폰트가 사용할 수 없을 경우에 대비한 대체 폰트 패밀리를 나타냅니다. 또한, 'Nanum Myeongjo' 폰트에 대한 설정이 주석 처리되어 있습니다. 이는 현재 페이지에는 적용되지 않는 설정을 나타냅니다.

요약하면, 이 CSS 코드는 웹 페이지의 기본 스타일을 설정하기 위해 사용됩니다. 여러 HTML 요소의 기본 마진 및 패딩을 제거하고, 활성화된 버튼의 커서 스타일을 설정하며, 앵커 태그의 스타일을 설정하고, 본문의 기본 폰트를 설정합니다. */
body{
    /*font-family:'Nanum Myeongjo', serif; */
    font-family:'Pretendard-Regular', sans-serif;
}
/* for, 관련 */
textarea, select, input[type="text"], input[type="password"],input[type="email"]{
    height:28px;
    border: 1px solid #ddd;
    border-radius:4px;
    padding: 0 8px;
    box-sizing: border-box;
}

/* 대상 선택자(Target Selectors)
textarea: 모든 <textarea> 요소를 대상으로 합니다. 이는 여러 줄의 텍스트 입력을 위한 HTML 요소입니다.
select: 모든 <select> 요소를 대상으로 합니다. 이는 드롭다운 목록 형태의 선택 입력 요소입니다.
input[type="text"]: type 속성이 "text"인 모든 <input> 요소를 대상으로 합니다. 이는 한 줄의 텍스트 입력을 위한 요소입니다.
input[type="password"]: type 속성이 "password"인 모든 <input> 요소를 대상으로 합니다. 이는 비밀번호 입력 필드입니다.
input[type="email"]: type 속성이 "email"인 모든 <input> 요소를 대상으로 합니다. 이는 이메일 주소 입력을 위한 필드입니다.
스타일 속성(Style Properties)
height:28px;: 해당 입력 요소의 높이를 28픽셀로 설정합니다.
border: 1px solid #ddd;: 입력 요소 주변에 1픽셀의 실선 테두리를 추가하고, 테두리 색상을 #ddd(밝은 회색)로 설정합니다.
border-radius:4px;: 입력 요소의 모든 모서리를 둥글게 만들기 위해 반경을 4픽셀로 설정합니다. 이로 인해 입력 필드가 부드럽게 둥근 모양을 가집니다.
padding: 0 8px;: 입력 요소 내의 콘텐츠와 테두리 사이에 여백을 추가합니다. 상단 및 하단 여백은 0, 좌측 및 우측 여백은 8픽셀로 설정됩니다.
box-sizing: border-box;: 해당 요소의 width와 height 값이 테두리(border)와 내부 여백(padding)을 포함하여 계산되게 합니다. 이 설정은 요소의 전체 크기를 보다 예측하기 쉽게 만들어 줍니다. */
/* main내용 */
.main-title{font-size:24px;}
.main-desc{color:#767676;
           margin: 10px 0 32px;}
.btn-group{
    display:flex;
    justify-content: flex-end;
    gap:8px;
    margin: top 20px;
}
.btn{
    border:1px solid #ccc;
    background-color: #eee;
    font:inherit;
    color:inherit;
    border-radius: 4px;
    min-width: 80px;
    height: 40px;
    padding: 0 8px;
}
a.btn{
    display: inline-flex;
    align-items: center;
    justify-content: center;
    box-sizing:border-box;
    text-decoration: none;
}

/* margin: 10px 0 32px;: 요소의 상단 여백을 10픽셀로, 좌우 여백을 0으로, 하단 여백을 32픽셀로 설정
display: flex;: 플렉스박스 레이아웃을 사용
justify-content: flex-end;: 플렉스박스 내의 항목들을 우측 정렬
gap:8px;: 플렉스 항목 사이의 간격을 8픽셀로 설정
margin-top: 20px;: 요소의 상단 여백을 20픽셀로 설정
여러 스타일 속성: 요소를 인라인 플렉스박스로 설정하여 항목들을 중앙 정렬하고, 텍스트 밑줄을 제거합니다.

inherit은 CSS 속성 값의 하나로, 해당 속성을 가진 요소가 부모 요소로부터 그 속성 값을 상속받도록 지시합니다.

예를 들어, 아래와 같이 color 속성에 inherit 값을 설정하면:

inherit 값의 주요 사용 사례 중 하나는 특정 요소가 부모로부터 스타일 값을 상속받아야 함을 명시적으로 지정할 때입니다. 기본적으로, 모든 CSS 속성이 상속되는 것은 아니기 때문에, inherit 값을 사용하면 상속이 이루어지지 않는 속성에 대해서도 부모 요소로부터 값을 상속받도록 지시할 수 있습니다.
*/

.layout-header{
    height: 80px;
    padding: 0 20px;
    border-bottom: 1px solid #ccc;
    display:flex;
    align-items:center;
    justify-content:space-between;
}
.layout-header div*{
    text-decoration: none;
    font:inherit;
    color:inherit;
    background:none;
    border: 0;
}
.layout-footer{
    text-align: center;
    background-color: #eee;
    padding:30px 0;
}

body{
    display: flex;
    flex-direction:column;
    min-height: 100vh;
    gap: 60px;
}
main{
    flex-grow:1;
}